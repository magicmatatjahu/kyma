# Default values for rafter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride:
fullnameOverride:

image:
  repository:
  tag:
  pullPolicy:

installCRDs: true

deployment:
  labels: {}
  annotations: {}
  replicas: 1
  extraProperties: {}

pod:
  labels: {}
  annotations: {}
  resources: {}
  volumes: []
  volumeMounts: []
  extraProperties: {}
  extraContainerProperties: {}

serviceAccount:
  create: true
  name:
  labels: {}
  annotations: {}

rbac:
  clusterScope:
    create: true
    role:
      name:
      labels: {}
      annotations: {}
      extraRules: []
    roleBinding:
      name:
      labels: {}
      annotations: {}
  namespaced:
    create: true
    role:
      name:
      labels: {}
      annotations: {}
      extraRules: []
    roleBinding:
      name:
      labels: {}
      annotations: {}

webhooksConfigMap:
  create: true
  name:
  namespace: "{{ .Release.Namespace }}"
  hooks: {}
  labels: {}
  annotations: {}

metrics:
  enabled: true
  service:
    name:
    type: ClusterIP
    port:
      name: metrics
      internal: metrics
      external: 8080
      protocol: TCP
    labels: {}
    annotations: {}
  serviceMonitor:
    create: false
    name:
    scrapeInterval: 30s
    labels: {}
    annotations: {}
  pod:
    labels: {}
    annotations: {}

envs:
  clusterAssetGroup:
    relistInterval: 
      value: 5m
  assetGroup:
    relistInterval: 
      value: 5m
  clusterBucket:
    relistInterval: 
      value: 30s
    maxConcurrentReconciles: 
      value: "1"
    region: 
      value: us-east-1
  bucket:
    relistInterval: 
      value: 30s
    maxConcurrentReconciles: 
      value: "1"
    region: 
      value: us-east-1
  clusterAsset:
    relistInterval: 
      value: 30s
    maxConcurrentReconciles: 
      value: "1"
  asset:
    relistInterval: 
      value: 30s
    maxConcurrentReconciles: 
      value: "1"
  store:
    endpoint: 
      value: '{{ include "rafter.fullname" . }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000'
    externalEndpoint:
      value: 'http://localhost:9000'
    accessKey:
      valueFrom:
        secretKeyRef:
          name: '{{ include "rafter.fullname" . }}-minio'
          key: accesskey
    secretKey:
      valueFrom:
        secretKeyRef:
          name: '{{ include "rafter.fullname" . }}-minio'
          key: secretkey
    useSSL: 
      value: "false"
    uploadWorkers: 
      value: "10"
  loader:
    verifySSL: 
      value: "false"
    tempDir: 
      value: "/tmp"
  webhooks:
    validation:
      timeout: 
        value: 1m
      workers: 
        value: "10"
    mutation:
      timeout: 
        value: 1m
      workers: 
        value: "10"
    metadata:
      timeout: 
        value: 1m
