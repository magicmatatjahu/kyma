// Code generated by failery v1.0.0. DO NOT EDIT.

package disabled

import context "context"
import gqlschema "github.com/kyma-project/kyma/components/console-backend-service/internal/gqlschema"

// Resolver is an autogenerated failing mock type for the Resolver type
type Resolver struct {
	err error
}

// NewResolver creates a new Resolver type instance
func NewResolver(err error) *Resolver {
	return &Resolver{err: err}
}

// ClusterDocsTopicAssetsField provides a failing mock function with given fields: ctx, obj, typeArg
func (_m *Resolver) ClusterDocsTopicAssetsField(ctx context.Context, obj *gqlschema.ClusterDocsTopic, typeArg *string) ([]gqlschema.ClusterAsset, error) {
	var r0 []gqlschema.ClusterAsset
	var r1 error
	r1 = _m.err

	return r0, r1
}

// ClusterDocsTopicsQuery provides a failing mock function with given fields: ctx, viewContext, groupName
func (_m *Resolver) ClusterDocsTopicsQuery(ctx context.Context, viewContext *string, groupName string) ([]gqlschema.ClusterDocsTopic, error) {
	var r0 []gqlschema.ClusterDocsTopic
	var r1 error
	r1 = _m.err

	return r0, r1
}

// DocsTopicAssetsField provides a failing mock function with given fields: ctx, obj, typeArg
func (_m *Resolver) DocsTopicAssetsField(ctx context.Context, obj *gqlschema.DocsTopic, typeArg *string) ([]gqlschema.Asset, error) {
	var r0 []gqlschema.Asset
	var r1 error
	r1 = _m.err

	return r0, r1
}
